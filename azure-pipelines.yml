trigger:
  branches:
    include:
      - main  

pr:
  branches:
    include:
      - main  

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: docker-registry-variable
  - name: imageName
    value: 'crudapp'  

stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: Build
    displayName: 'Build job'
    steps:
    - script: |
        echo $(Build.BuildId)
        az acr build --registry viper --image $(imageName):$(Build.BuildId) .
      displayName: 'Build Docker Image'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Pipeline.Workspace)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive Files'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/drop'
        artifact: 'drop'
        publishLocation: 'pipeline'
      displayName: 'Publish Pipeline Artifact'

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy job'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'drop'
      displayName: 'Download Pipeline Artifact'

    - script: |
        az webapp config container set --name crudapp1 --resource-group crudapp --docker-custom-image-name viper.azurecr.io/$(imageName):$(Build.BuildId) --docker-registry-server-url https://viper.azurecr.io --docker-registry-server-user $(dockerRegistryUsername) --docker-registry-server-password $(dockerRegistryPassword)
      displayName: 'Configure Web App Container'
      env:
        dockerRegistryUsername: $(dockerRegistryUsername)
        dockerRegistryPassword: $(dockerRegistryPassword)

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'xmen-connection'  
        appName: 'crudapp1'  
        resourceGroupName: 'crudapp'  
        deployToSlotOrASE: false
        dockerNamespace: 'viper.azurecr.io'
        dockerRepository: $(imageName)
        dockerImageTag: $(Build.BuildId)
        startupCommand: ''
      displayName: 'Deploy to Azure Web App'

resources:
  containers:
  - container: azurecli
    image: mcr.microsoft.com/azure-cli
    endpoint: xmen-registry
